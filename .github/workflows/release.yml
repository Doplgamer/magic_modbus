name: Release

on:
  push:
    tags: ['v*']
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
            name: linux-x86_64
          - target: x86_64-pc-windows-gnu
            os: windows-latest
            name: windows-x86_64
          - target: x86-64-apple-darwin
            os: macos-latest
            name: macos-x86_64
          - target: aarch64-apple-darwin
            os: macos-latest
            name: macos-aarch64
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}

      - name: Setup Cache
        uses: Swatinem/rust-cache@v2

      - name: Build Binary
        run: cargo build --release --target ${{ matrix.target }}

      - name: Package Binary
        shell: bash
        run: |
          cd target/${{ matrix.target }}/release
          if [[ "${{ matrix.target }}" == *"windows"* ]]; then
            BINARY_NAME="${{ github.event.repository.name }}.exe"
          else
            BINARY_NAME="${{ github.event.repository.name }}"
          fi

          if [[ "${{ matrix.target }}" == *"windows"* ]]; then
            7z a ../../../${{ matrix.name }}.zip $BINARY_NAME
          else
            tar czvf ../../../${{ matrix.name }}.tar.gz $BINARY_NAME
          fi

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.name }}
          path: |
            *.zip
            *.tar.gz

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Download Artifacts
        uses: actions/download-artifact@v5

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            */*.zip
            */*.tar.gz
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
